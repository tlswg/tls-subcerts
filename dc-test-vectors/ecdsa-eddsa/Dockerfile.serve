FROM alpine AS bsslbuilder
RUN apk add git openssh cmake gcc g++ ninja libc-dev perl go
RUN git clone https://boringssl.googlesource.com/boringssl
RUN mkdir boringssl/build
WORKDIR boringssl/build
COPY support_dc.patch support_dc.patch
RUN git config user.email "a" && git config user.name "a"
RUN git am support_dc.patch
RUN cmake -GNinja ..
RUN ninja bssl

FROM alpine AS gobuilder
RUN apk add git openssh go bash
RUN git clone --branch dcs_with_rsapss --single-branch https://github.com/jhoyla/go.git
WORKDIR go/src
RUN ./make.bash
COPY cmd/ /utils/cmd/
RUN CGO_ENABLED=0 /go/bin/go build /utils/cmd/fetch_dc/fetch_dc.go
RUN CGO_ENABLED=0 /go/bin/go build /utils/cmd/serve_dc/serve_dc.go
RUN CGO_ENABLED=0 /go/bin/go build /go/src/crypto/tls/generate_delegated_credential.go

FROM alpine AS client
WORKDIR /probe
COPY --from=gobuilder /go/src/fetch_dc /probe/fetch_dc
CMD ["./fetch_dc", "-root=/ca/root.pem", "-hostname=eddsa.example", "-address=eddsa.example", "-port=8081"]

FROM alpine AS server
WORKDIR /certs
RUN apk add libstdc++ tcpdump
COPY --from=bsslbuilder /boringssl/build/tool/bssl /util/bssl
COPY ecdsa-eddsa/serve.sh /util/serve.sh
HEALTHCHECK --interval=3s CMD ["pgrep", "-fl", "bssl"]
CMD ["/util/serve.sh"]
